// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#pragma once

#include "frc2/command/SubsystemBase.h"
#include "ctre/Phoenix.h"
#include "rev/CANSparkMax.h"
#include "hwcfg.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

#define LOAD_MOTOR_ID 6
#define DEFAULT_LOADER_VOLTS 0.5
/**
 *
 *
 * @author ExampleAuthor
 */
class Loader: public frc2::SubsystemBase {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	VictorSPX loadMotor{LOAD_MOTOR_ID};
	rev::CANSparkMax m_loaderMotor{CANIDs::kLoaderMotorID, rev::CANSparkMax::MotorType::kBrushed};
	rev::CANEncoder m_loaderEncoder{m_loaderMotor.GetEncoder()};
	rev::CANPIDController m_pidLoaderEncoder{m_loaderMotor.GetPIDController()};
	
public:
Loader();
	void Periodic() override;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	void LoaderUp(double speed = DEFAULT_LOADER_VOLTS){m_loaderMotor.Set(speed);}
	void LoaderDown(double speed = DEFAULT_LOADER_VOLTS){m_loaderMotor.Set(-speed);}
	void LoaderStop(void){m_loaderMotor.Set(0.0);}

};

