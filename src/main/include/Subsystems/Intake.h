// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#pragma once

#include "frc/commands/Subsystem.h"
#include "hwcfg.h"
#include "frc/DoubleSolenoid.h"
#include "rev/CANSparkMax.h"

#define DEFAULT_INTAKE_VOLTS 0.5

/**
 *
 *
 * @author ExampleAuthor
 */
class Intake: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	frc::DoubleSolenoid m_intakeSol{PCMIDs::kIntakeSolFwd, PCMIDs::kIntakeSolRev};
	rev::CANSparkMax m_intakeMotor{CANIDs::kIntakeMotorID, rev::CANSparkMax::MotorType::kBrushless};
	rev::CANEncoder m_intakeEncoder{m_intakeMotor.GetEncoder()};
	rev::CANPIDController m_pidIntakeMotor{m_intakeMotor.GetPIDController()};
public:
Intake();
	void InitDefaultCommand() override;
	void Periodic() override;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	void IntakeUp(){m_intakeSol.Set(frc::DoubleSolenoid::kReverse);}
	void IntakeDown(){m_intakeSol.Set(frc::DoubleSolenoid::kForward);}
	void IntakeOn(double speed = DEFAULT_INTAKE_VOLTS){m_intakeMotor.Set(speed);}
	void IntakeOff(void){m_intakeMotor.Set(0.0);}
	void IntakeReverse(double speed = DEFAULT_INTAKE_VOLTS) {m_intakeMotor.Set(-speed);}
};

